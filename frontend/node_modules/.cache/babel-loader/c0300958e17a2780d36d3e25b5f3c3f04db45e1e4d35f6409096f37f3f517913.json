{"ast":null,"code":"var _jsxFileName = \"/Users/akashs-chetiar/Desktop/sql/frontend/src/Components/Cron.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Cron() {\n  _s();\n  const [schedule, setSchedule] = useState('');\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      const response = await fetch('http://localhost:5000/schedule', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          schedule\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to schedule task');\n      }\n    } catch (error) {\n      console.error('Error scheduling task:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"cronform\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"scheduleInput\",\n        children: \"Enter Schedule (Cron Expression):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"cornFormInput\",\n          type: \"text\",\n          id: \"scheduleInput\",\n          name: \"schedule\",\n          placeholder: \"* * * * *\",\n          value: schedule,\n          onChange: e => setSchedule(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Schedule Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n_s(Cron, \"YqGJF80ZOinRmCJiwpf2gr1qtjM=\");\n_c = Cron;\nvar _c;\n$RefreshReg$(_c, \"Cron\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Cron","_s","schedule","setSchedule","handleSubmit","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","Error","error","console","children","onSubmit","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","name","placeholder","value","onChange","e","target","required","_c","$RefreshReg$"],"sources":["/Users/akashs-chetiar/Desktop/sql/frontend/src/Components/Cron.jsx"],"sourcesContent":["\nimport React, { useState } from 'react';\n\nexport default function Cron() {\n    const [schedule, setSchedule] = useState('');\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n\n        try {\n            const response = await fetch('http://localhost:5000/schedule', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({ schedule })\n            });\n\n            if (!response.ok) {\n                throw new Error('Failed to schedule task');\n            }\n        } catch (error) {\n            console.error('Error scheduling task:', error);\n        }\n    };\n    return (\n        <div>\n            <form onSubmit={handleSubmit} className='cronform'>\n                <label htmlFor=\"scheduleInput\">Enter Schedule (Cron Expression):</label>\n                <div>\n                    <input\n                        className='cornFormInput'\n                        type=\"text\"\n                        id=\"scheduleInput\"\n                        name=\"schedule\"\n                        placeholder=\"* * * * *\"\n                        value={schedule}\n                        onChange={(e) => setSchedule(e.target.value)}\n                        required\n                    />\n                </div> \n                <button type=\"submit\">Schedule Task</button>\n            </form>\n        </div>\n    );\n}\n\n \n"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,eAAe,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAC3B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMO,YAAY,GAAG,MAAOC,KAAK,IAAK;IAClCA,KAAK,CAACC,cAAc,CAAC,CAAC;IAEtB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgC,EAAE;QAC3DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEX;QAAS,CAAC;MACrC,CAAC,CAAC;MAEF,IAAI,CAACK,QAAQ,CAACO,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;MAC9C;IACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAClD;EACJ,CAAC;EACD,oBACIjB,OAAA;IAAAmB,QAAA,eACInB,OAAA;MAAMoB,QAAQ,EAAEf,YAAa;MAACgB,SAAS,EAAC,UAAU;MAAAF,QAAA,gBAC9CnB,OAAA;QAAOsB,OAAO,EAAC,eAAe;QAAAH,QAAA,EAAC;MAAiC;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACxE1B,OAAA;QAAAmB,QAAA,eACInB,OAAA;UACIqB,SAAS,EAAC,eAAe;UACzBM,IAAI,EAAC,MAAM;UACXC,EAAE,EAAC,eAAe;UAClBC,IAAI,EAAC,UAAU;UACfC,WAAW,EAAC,WAAW;UACvBC,KAAK,EAAE5B,QAAS;UAChB6B,QAAQ,EAAGC,CAAC,IAAK7B,WAAW,CAAC6B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAC7CI,QAAQ;QAAA;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACX;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eACN1B,OAAA;QAAQ2B,IAAI,EAAC,QAAQ;QAAAR,QAAA,EAAC;MAAa;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd;AAACxB,EAAA,CA1CuBD,IAAI;AAAAmC,EAAA,GAAJnC,IAAI;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}